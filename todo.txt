boost-no-inspect

* Adding Doxygen comments to describe briefly the files, functions etc (so users can find which include files may be needed?)
* I don't understand the timing figures given in Performance section.   Some items refer to MSVC express 10, other detailed tables in Boost 1.55 to 11? No Clang results?

* You are not using links to take from the text to the appropriate functions etc
in the  reference section.  Users will find this helpful too.

* The reference section could be much improved by adding brief Doxygen comments to
the files, functions etc.

* In my opinion the documentation should start by explaining how to convert between strings and numeric values. 
* Next it could tell how to deal with failed conversions. 
* Finally it could explain how to deal with stringstream modifiers.
* The documentation doesn't seem to say anything about conversion to strings.



* higher density of comments if any other authors ever need to work on the library 
* I would like to find "convert.hpp" DONE
* tabs and spaces DONE
* Some comments of the //-comment-type begin on the zero'th column, whereas some begin at indented locations. That is not clean.
* There is a rather high number of comments of the type TBD. These are good for noting future goals, but also lend an uneasy feeling about the stability of the code.
* It might be useful to establish the range of application and the differences between convert and lexical_cast.

Jeroen

I'd like an overload without the Converter const & as well, defaulting to a converter chosen via a customisation point.

Roland


I think it would be relatively simple to get to a much leaner interface.
For instance,

  * convert could have a converter template parameter, defaulting to the
    stringstream converter
  * convert::from() could have an overload that just takes the "from"
    parameter and provides the default-constructed converter itself.
  * convert could have a conversion operator for the OutType, which does
    the same as convert::value()



OK with optional as a return type: Alex, Andrzej, Matus, Jeroen (can live with it and slowly warming up to)




